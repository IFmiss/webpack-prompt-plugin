"use strict";var o=require("fs");var t,n=require("detect-port"),e=require("inquirer"),i=require("chalk"),r="webpack-prompt-plugin",s=require("ip"),p=(t=o.readFileSync("package.json"),JSON.parse(t)),c=function(){function o(o){this.isWatch=!1,this.isStarted=!1,this.option={ip:!0,tips:[],checkPort:!0},this.option=Object.assign({},this.option,o)}return o.prototype.getIP=function(){return s.address()},o.prototype.printIP=function(o){if(this.option.ip){var t=o.host?"0.0.0.0"===o.host?this.getIP():o.host:"localhost",n=o.port||80,e="http://"+t+":"+n+"/";console.log("\n"),console.log(i.bgGreen.black(" done "),i.green("App is runing!")),console.log("\n"),console.log("- Local:  ",i.underline.blue("http://localhost:"+n+"/")),console.log("- Network:",i.underline.blue(e)),console.log("\n")}},o.prototype.printProjectInfo=function(){console.log("name: ",i.underline.green(p.name),"   version: ",i.underline.green(p.version)),console.log("\n")},o.prototype.printHandler=function(o){var t=this;o.hooks?o.hooks.done.tap(r,(function(){t.isStarted||(t.isStarted=!0,t.option.ip&&t.isWatch&&o.options.devServer&&t.printIP(o.options.devServer),t.printProjectInfo(),t.printCustom())})):o.plugin("done",(function(n){t.isStarted||(t.isStarted=!0,t.option.ip&&t.isWatch&&o.options.devServer&&t.printIP(o.options.devServer),t.printProjectInfo(),t.printCustom())}))},o.prototype.printCustom=function(){this.option.tips&&this.option.tips.length&&this.option.tips.forEach((function(o){var t=o.color?o.color:"green";"object"==typeof o?console.log(i[t](o.name||"hello "+r)):console.log(i.green(o||"hello "+r))}))},o.prototype.initHandler=function(o){var t=this;o.hooks?(o.hooks.afterPlugins.tap(r,(function(o){t.checkPort(o)})),o.hooks.watchRun.tap(r,(function(){t.isWatch=!0})),o.hooks.failed.tap(r,(function(){t.isWatch=!1,console.log(i.red("failed"))}))):(o.plugin("watchRun",(function(o){t.isWatch=!0})),o.plugin("failed",(function(){t.isWatch=!1,console.log(i.red("failed"))})))},o.prototype.checkPort=function(o){if(this.option.checkPort){var t=o.options.devServer.port||80;n(t,(function(n,i){n&&console.log(n),t===i?console.log("port: "+t+" was not occupied"):e.prompt([{name:"changePort",type:"confirm",message:"端口被占用了，切换到 "+i+"? (The port "+t+" is not available, would you like to run on "+i+"?)",default:!0}]).then((function(t){t.changePort?o.options.devServer.port=t.changePort:process.exit(0)}))}))}},o.prototype.apply=function(o){this.initHandler(o),this.printHandler(o)},o}();module.exports=c;
